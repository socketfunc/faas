// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime.proto

package faas

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Runtime_Cmd int32

const (
	Runtime_Cmd_Stream_Cmd Runtime_Cmd = 0
	Runtime_Cmd_Store_Cmd  Runtime_Cmd = 1
)

var Runtime_Cmd_name = map[int32]string{
	0: "Stream_Cmd",
	1: "Store_Cmd",
}
var Runtime_Cmd_value = map[string]int32{
	"Stream_Cmd": 0,
	"Store_Cmd":  1,
}

func (x Runtime_Cmd) String() string {
	return proto.EnumName(Runtime_Cmd_name, int32(x))
}
func (Runtime_Cmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_runtime_ad1756f3dca9e7d1, []int{0}
}

type StreamResponse_Type int32

const (
	StreamResponse_Send      StreamResponse_Type = 0
	StreamResponse_Broadcast StreamResponse_Type = 1
	StreamResponse_Reply     StreamResponse_Type = 2
)

var StreamResponse_Type_name = map[int32]string{
	0: "Send",
	1: "Broadcast",
	2: "Reply",
}
var StreamResponse_Type_value = map[string]int32{
	"Send":      0,
	"Broadcast": 1,
	"Reply":     2,
}

func (x StreamResponse_Type) String() string {
	return proto.EnumName(StreamResponse_Type_name, int32(x))
}
func (StreamResponse_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_runtime_ad1756f3dca9e7d1, []int{3, 0}
}

type Request struct {
	Cmd                  Runtime_Cmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=faas.Runtime_Cmd" json:"cmd,omitempty"`
	StreamRequest        *StreamRequest `protobuf:"bytes,2,opt,name=streamRequest,proto3" json:"streamRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_ad1756f3dca9e7d1, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetCmd() Runtime_Cmd {
	if m != nil {
		return m.Cmd
	}
	return Runtime_Cmd_Stream_Cmd
}

func (m *Request) GetStreamRequest() *StreamRequest {
	if m != nil {
		return m.StreamRequest
	}
	return nil
}

type Response struct {
	Cmd                  Runtime_Cmd     `protobuf:"varint,1,opt,name=cmd,proto3,enum=faas.Runtime_Cmd" json:"cmd,omitempty"`
	StreamResponse       *StreamResponse `protobuf:"bytes,2,opt,name=streamResponse,proto3" json:"streamResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_ad1756f3dca9e7d1, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCmd() Runtime_Cmd {
	if m != nil {
		return m.Cmd
	}
	return Runtime_Cmd_Stream_Cmd
}

func (m *Response) GetStreamResponse() *StreamResponse {
	if m != nil {
		return m.StreamResponse
	}
	return nil
}

type StreamRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Event                string   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_ad1756f3dca9e7d1, []int{2}
}
func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (dst *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(dst, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamRequest) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *StreamRequest) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type StreamResponse struct {
	Type                 StreamResponse_Type `protobuf:"varint,1,opt,name=type,proto3,enum=faas.StreamResponse_Type" json:"type,omitempty"`
	Topic                string              `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Event                string              `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	Payload              []byte              `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_ad1756f3dca9e7d1, []int{3}
}
func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (dst *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(dst, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetType() StreamResponse_Type {
	if m != nil {
		return m.Type
	}
	return StreamResponse_Send
}

func (m *StreamResponse) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *StreamResponse) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *StreamResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "faas.Request")
	proto.RegisterType((*Response)(nil), "faas.Response")
	proto.RegisterType((*StreamRequest)(nil), "faas.StreamRequest")
	proto.RegisterType((*StreamResponse)(nil), "faas.StreamResponse")
	proto.RegisterEnum("faas.Runtime_Cmd", Runtime_Cmd_name, Runtime_Cmd_value)
	proto.RegisterEnum("faas.StreamResponse_Type", StreamResponse_Type_name, StreamResponse_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuntimeClient is the client API for Runtime service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimeClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Runtime_StreamClient, error)
}

type runtimeClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeClient(cc *grpc.ClientConn) RuntimeClient {
	return &runtimeClient{cc}
}

func (c *runtimeClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Runtime_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Runtime_serviceDesc.Streams[0], "/faas.Runtime/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &runtimeStreamClient{stream}
	return x, nil
}

type Runtime_StreamClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type runtimeStreamClient struct {
	grpc.ClientStream
}

func (x *runtimeStreamClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *runtimeStreamClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RuntimeServer is the server API for Runtime service.
type RuntimeServer interface {
	Stream(Runtime_StreamServer) error
}

func RegisterRuntimeServer(s *grpc.Server, srv RuntimeServer) {
	s.RegisterService(&_Runtime_serviceDesc, srv)
}

func _Runtime_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RuntimeServer).Stream(&runtimeStreamServer{stream})
}

type Runtime_StreamServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type runtimeStreamServer struct {
	grpc.ServerStream
}

func (x *runtimeStreamServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *runtimeStreamServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Runtime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "faas.Runtime",
	HandlerType: (*RuntimeServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Runtime_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "runtime.proto",
}

func init() { proto.RegisterFile("runtime.proto", fileDescriptor_runtime_ad1756f3dca9e7d1) }

var fileDescriptor_runtime_ad1756f3dca9e7d1 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4e, 0xf3, 0x30,
	0x10, 0xac, 0xdb, 0xf4, 0x27, 0xdb, 0x2f, 0x51, 0xbe, 0xa5, 0x87, 0xc0, 0xa9, 0x0a, 0x97, 0xa8,
	0xa2, 0x11, 0x2a, 0x17, 0x90, 0x38, 0xc1, 0x1b, 0xb8, 0x70, 0x46, 0xa6, 0x59, 0xa4, 0x4a, 0x4d,
	0x6c, 0x62, 0x17, 0x29, 0x8f, 0xc5, 0x1b, 0xa2, 0xc4, 0xae, 0x68, 0x50, 0x91, 0x38, 0x4e, 0x66,
	0x66, 0x67, 0x76, 0x63, 0x08, 0xaa, 0x7d, 0x69, 0xb6, 0x05, 0x65, 0xaa, 0x92, 0x46, 0xa2, 0xf7,
	0x26, 0x84, 0x4e, 0xb6, 0x30, 0xe6, 0xf4, 0xbe, 0x27, 0x6d, 0xf0, 0x12, 0x06, 0x9b, 0x22, 0x8f,
	0xd9, 0x9c, 0xa5, 0xe1, 0xea, 0x7f, 0xd6, 0xd0, 0x19, 0xb7, 0x96, 0x97, 0xc7, 0x22, 0xe7, 0x0d,
	0x8b, 0x77, 0x10, 0x68, 0x53, 0x91, 0x28, 0x9c, 0x2b, 0xee, 0xcf, 0x59, 0x3a, 0x5d, 0x9d, 0x59,
	0xf9, 0xfa, 0x98, 0xe2, 0x5d, 0x65, 0x52, 0xc0, 0x84, 0x93, 0x56, 0xb2, 0xd4, 0xf4, 0xb7, 0xac,
	0x7b, 0x08, 0x0f, 0x13, 0xac, 0xcd, 0x85, 0xcd, 0xba, 0x61, 0x96, 0xe3, 0x3f, 0xb4, 0xc9, 0x33,
	0x04, 0x9d, 0x3a, 0x38, 0x83, 0xa1, 0x91, 0x6a, 0xbb, 0x69, 0x53, 0x7d, 0x6e, 0x41, 0xf3, 0x95,
	0x3e, 0xa8, 0xb4, 0x8b, 0xf8, 0xdc, 0x02, 0x8c, 0x61, 0xac, 0x44, 0xbd, 0x93, 0x22, 0x8f, 0x07,
	0x73, 0x96, 0xfe, 0xe3, 0x07, 0x98, 0x7c, 0x32, 0x08, 0xbb, 0xc9, 0xb8, 0x04, 0xcf, 0xd4, 0x8a,
	0xdc, 0x36, 0xe7, 0xa7, 0xda, 0x65, 0x4f, 0xb5, 0x22, 0xde, 0xca, 0xbe, 0x7b, 0xf4, 0x4f, 0xf6,
	0x18, 0xfc, 0xd2, 0xc3, 0xeb, 0xf6, 0x58, 0x80, 0xd7, 0xcc, 0xc4, 0x09, 0x78, 0x6b, 0x2a, 0xf3,
	0xa8, 0x87, 0x01, 0xf8, 0x0f, 0x95, 0x14, 0xf9, 0x46, 0x68, 0x13, 0x31, 0xf4, 0x61, 0xc8, 0x49,
	0xed, 0xea, 0xa8, 0xbf, 0xb8, 0x82, 0xe9, 0xd1, 0x71, 0x31, 0x04, 0xb0, 0xed, 0x1a, 0x64, 0x8d,
	0x6b, 0x23, 0xab, 0x96, 0x8c, 0xd8, 0xea, 0x16, 0xc6, 0x4e, 0x8d, 0x4b, 0x18, 0x59, 0x25, 0x06,
	0xee, 0x1f, 0xd9, 0x5b, 0x5e, 0x84, 0x07, 0xe8, 0x8e, 0xdd, 0x4b, 0xd9, 0x35, 0x7b, 0x1d, 0xb5,
	0x2f, 0xeb, 0xe6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x45, 0xc5, 0x7a, 0x40, 0x6a, 0x02, 0x00, 0x00,
}
